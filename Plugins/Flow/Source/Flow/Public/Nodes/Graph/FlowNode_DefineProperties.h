// Copyright https://github.com/MothCocoon/FlowGraph/graphs/contributors

#pragma once

#include "Interfaces/FlowDataPinGeneratorNodeInterface.h"
#include "Nodes/FlowNode.h"
#include "Types/FlowDataPinProperties.h"

#include "FlowNode_DefineProperties.generated.h"

/**
 * FlowNode to define data pin property literals for use connecting to data pin inputs in a flow graph
 */
UCLASS(Blueprintable, meta = (DisplayName = "Define Properties"))
class FLOW_API UFlowNode_DefineProperties
	: public UFlowNode
	, public IFlowDataPinGeneratorNodeInterface
{
	GENERATED_UCLASS_BODY()

protected:

	// Instance-defined properties.  
	// These will auto-generate a matching pin that is bound to its property as its data source.
	UPROPERTY(EditAnywhere, Category = "Configuration", DisplayName = Properties)
	TArray<FFlowNamedDataPinOutputProperty> OutputProperties;

public:

#if WITH_EDITOR
	// IFlowContextPinSupplierInterface
	virtual bool SupportsContextPins() const override { return Super::SupportsContextPins() || !OutputProperties.IsEmpty(); }
	// --

	// UObject
	virtual void PostEditChangeChainProperty(FPropertyChangedChainEvent& PropertyChangedEvent) override;
	// --

	// IFlowDataPinGeneratorNodeInterface
	virtual void AutoGenerateDataPins(
		TMap<FName, FName>& InOutPinNameToBoundPropertyNameMap,
		TArray<FFlowPin>& InOutInputDataPins,
		TArray<FFlowPin>& InOutOutputDataPins) const override;
	// --
#endif

protected:

	virtual bool TryFindPropertyByRemappedPinName(
		const FName& RemappedPinName,
		const FProperty*& OutFoundProperty,
		TInstancedStruct<FFlowDataPinProperty>& OutFoundInstancedStruct,
		EFlowDataPinResolveResult& InOutResult) const override;
};
